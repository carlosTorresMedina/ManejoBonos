/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuiFormulario;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlos
 */
public class GuiConsultarEnrolarBono extends javax.swing.JFrame {

    private GuiMenu menu;

    /**
     * Creates new form GuiConsultarEntidad
     */
    public GuiConsultarEnrolarBono(GuiMenu menu) {
        initComponents();
        this.menu = menu;
        this.btnActualizar.setBackground(Color.white);
    }

    public void cargarTabla() {
        ArrayList<String> cad = this.menu.getPrincipal().getFachada().consultarBonosEnrolados();
        String[] nomC = new String[10];
        nomC[0] = "Fecha bono";
        nomC[1] = "D.I usuario ";
        nomC[2] = "Usuario ";
        nomC[3] = "entidad";
        nomC[4] = "Serial";
        nomC[5] = "D.I usuario pago";
        nomC[6] = "Usuario pago";
        nomC[7] = "Fecha pago";
        nomC[8] = "Estado";
        nomC[9] = "Valor";

        String datos[][] = new String[cad.size()][10];
        for (int i = 0; i < cad.size(); i++) {
            String var[] = cad.get(i).split("@");
            for (int j = 0; j < nomC.length; j++) {

                datos[i][j] = var[j];
            }
        }
        this.jTableBonos.setModel(new DefaultTableModel(datos, nomC));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBonos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        labelRegresar = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTableBonos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableBonos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBonosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableBonos);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Bonos enrolados en el sistema");

        labelRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/regresar.jpg"))); // NOI18N
        labelRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelRegresarMouseClicked(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnActualizar.setText("Actualizar tabla");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1040, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelRegresar)
                                .addGap(283, 283, 283)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelRegresar, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(41, 41, 41)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "debe cerrar sesion");
    }//GEN-LAST:event_formWindowClosing

    private void labelRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelRegresarMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        this.menu.setVisible(true);
    }//GEN-LAST:event_labelRegresarMouseClicked

    private void jTableBonosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBonosMouseClicked
        // TODO add your handling code here:
        String[] datos = this.valorTabla();
        String serial = datos[0];
        int seleccion = JOptionPane.showOptionDialog(
                rootPane,
                "Seleccione opcion a realizar para el bono con serial " + serial,
                "Selector de opciones ",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                new Object[]{"   Borrar", "Cancelar"},
                "opcion 1");

        if (seleccion == 0) {
            boolean confirmacion = this.cerrar();
            if (confirmacion) {
                boolean x = this.menu.getPrincipal().getFachada().BorrarBonoEnrolado(serial);
                if (x) {
                    JOptionPane.showMessageDialog(null, "el bono se borro con exito");

                    this.cargarTabla();
                } else {
                    JOptionPane.showMessageDialog(null, "hay un problema conla base de datos");
                }
            } else {
                return;
            }

        }

    }//GEN-LAST:event_jTableBonosMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        this.cargarTabla();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private boolean cerrar() {
        Object[] opciones = {"Aceptar", "Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane, "esta seguro que desea borrar el bono", "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opciones, "Cancelar");

        return (eleccion == JOptionPane.YES_OPTION);

    }

    private String[] valorTabla() {

        if (this.jTableBonos.getSelectedRow() >= 0) {

            String datos[] = {
                String.valueOf(this.jTableBonos.getValueAt(this.jTableBonos.getSelectedRow(), 4)),};

            return datos;
        }
        return null;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableBonos;
    private javax.swing.JLabel labelRegresar;
    // End of variables declaration//GEN-END:variables
}
