/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuiFormulario;

import Dto.EntidadDto;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import java.text.DecimalFormat;

/**
 *
 * @author carlos
 */
public class GuiCrearEnrolarBono extends javax.swing.JFrame {

    private GuiMenu menu;

    /**
     * Creates new form GuiCrearEnrolarBono
     */
    public GuiCrearEnrolarBono(GuiMenu menu) {
        initComponents();
        this.menu = menu;

    }

    /**
     * carga los comopnentes iniciales
     */
    public void cargarComponentes() {
        this.txtSerial.setText("");
        this.txtValor.setText("");
        this.txtValor.requestFocus();
        this.cmdCodigo_entidad.removeAllItems();
        ArrayList<EntidadDto> lista = new ArrayList();
        lista = this.menu.getPrincipal().getFachada().consultarEntidades();
        this.cmdCodigo_entidad.addItem("no seleccion");
        for (EntidadDto x : lista) {
            
            this.cmdCodigo_entidad.addItem(x.getCodigo_entidad() + "-" + x.getNombre_entidad());
        }
    }

    /**
     * vacia los campos serial y valor
     */
    private void vaciarCampos() {

        this.txtSerial.setText("");
        this.txtValor.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        txtSerial = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        labelRegresar = new javax.swing.JLabel();
        cmdCodigo_entidad = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Codigo_entidad:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Serial:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Valor:");

        btnRegistrar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        txtSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialActionPerformed(evt);
            }
        });
        txtSerial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSerialKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSerialKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel6.setText("Crear enrolar bonos");

        labelRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/regresar.jpg"))); // NOI18N
        labelRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelRegresarMouseClicked(evt);
            }
        });

        cmdCodigo_entidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmdCodigo_entidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCodigo_entidadActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Pesos");

        txtValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorActionPerformed(evt);
            }
        });
        txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtValor))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSerial)
                            .addComponent(cmdCodigo_entidad, 0, 227, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelRegresar)
                .addGap(147, 147, 147)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelRegresar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdCodigo_entidad, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(jLabel5))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        this.Registrar();
    }//GEN-LAST:event_btnRegistrarActionPerformed

    /**
     * registra el bono en la base de datos
     */
    private void Registrar() {

        String codigo = this.cmdCodigo_entidad.getSelectedItem().toString();
        String v[] = codigo.split("-");
        String serial = this.txtSerial.getText();
        boolean valor = this.validarCampoValor();
        if (!valor) {
            JOptionPane.showMessageDialog(null, "el campo valor debe ser un numero entero");
            this.txtValor.requestFocus();
            return;
        }
        if (serial.isEmpty()) {
            JOptionPane.showMessageDialog(null, "llene todos los campos");
            this.txtValor.requestFocus();
            return;
        }

        if (codigo.equals("no seleccion")) {
            JOptionPane.showMessageDialog(null, "seleccione una entidad");
            return;
        }

        this.RegistraFinal(Integer.parseInt(v[0]), serial, Integer.parseInt(this.txtValor.getText()), this.menu.Nuip);

    }

    /**
     * genera el registro del bono
     *
     * @param codigo
     * @param serial
     * @param valor
     * @param usuario
     */
    private void RegistraFinal(int codigo, String serial, int valor, String usuario) {
        boolean val = this.menu.getPrincipal().getFachada().crearEnrolarBono(codigo, serial, valor, usuario);
        if (val) {
            this.txtSerial.setText("");
            this.txtSerial.requestFocus();
        } else {
            JOptionPane.showMessageDialog(null, "ese bono ya ha sido enrolado");
            this.txtSerial.setText("");
            this.txtSerial.requestFocus();
        }
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "debe cerrar sesion");
    }//GEN-LAST:event_formWindowClosing

    private void labelRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelRegresarMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        this.menu.setVisible(true);
    }//GEN-LAST:event_labelRegresarMouseClicked

    private void cmdCodigo_entidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCodigo_entidadActionPerformed
        // TODO add your handling code here:

        if (this.cmdCodigo_entidad.getItemCount() >= 1) {
            String codigo = this.cmdCodigo_entidad.getSelectedItem().toString();
            if (!codigo.equals("no seleccion")) {
                this.vaciarCampos();
                this.txtValor.requestFocus();
            }
        }

    }//GEN-LAST:event_cmdCodigo_entidadActionPerformed

    private void txtSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialActionPerformed

    private void txtSerialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerialKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.Registrar();
        }
    }//GEN-LAST:event_txtSerialKeyPressed

    private void txtValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorActionPerformed

    private void txtValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtSerial.requestFocus();
        }
    }//GEN-LAST:event_txtValorKeyPressed

    private void txtValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();
        String cadena = this.txtValor.getText();
        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtValorKeyTyped

    private void txtValorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtValorKeyReleased

    private void txtSerialKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerialKeyReleased
        // TODO add your handling code here:
        String cadena = (this.txtSerial.getText()).toUpperCase();
        this.txtSerial.setText(cadena);
    }//GEN-LAST:event_txtSerialKeyReleased

    /**
     * valida que el campo valir sea numerico
     *
     * @return
     */
    private boolean validarCampoValor() {
        String str = this.txtValor.getText();
        char[] fuente = str.toCharArray();
        char[] resultado = new char[fuente.length];
        int j = 0;

        for (int i = 0; i < fuente.length; i++) {
            if (fuente[i] >= '0' && fuente[i] <= '9') {
                resultado[j++] = fuente[i];
            } else {
                return false;
            }
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox cmdCodigo_entidad;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel labelRegresar;
    private javax.swing.JTextField txtSerial;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
